
#version 410 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aColor;
layout (location = 2) in vec3 aNormal;


out vec4 ourColor;
out vec3 normVec;
out vec3 fragPos;
out vec3 objectColor;

out vec3 lightDir;
out float diff;

uniform vec3 lightPos;

uniform mat4 fullMat;
uniform mat4 model;
uniform mat4 invTranMod;

void main() {
	vec4 res = fullMat * model * vec4(aPos,1.0);
	gl_Position = res;
	float fogFac = (500.0f-gl_Position.z)/(500.0f-250.0f);
	if (fogFac > 1.0f) {
		fogFac = 1.0f;
	}
	vec3 fogCol = vec3(0.28f,0.45f,0.47f);
	ourColor = vec4(fogFac,fogFac,fogFac,1.0f);
	objectColor = (1-fogFac)*fogCol+(fogFac)*aColor;
	normVec = normalize(aNormal);
	fragPos = vec3(invTranMod * vec4(aPos, 1.0f));
	lightDir =  normalize(lightPos - fragPos);
	diff = max(-1.0f*(dot(normVec, lightDir)),0.0f);
}